[user]
	name = Michael Dippery
	email = michael@monkey-robot.com
[core]
	excludesfile = ~/.config/git/ignore
[apply]
	whitespace = nowarn
[color]
	branch = auto
	diff = auto
	interactive = auto
	status = auto
[log]
	; abbrevcommit = true
	decorate = no
[diff]
	renames = copies
[diff "ansible-vault"]
	textconv = ansible-vault view
[diff "gzip"]
	textconv = gunzip -c
[diff "json"]
	textconv = jq '.'
[interactive]
	singlekey = true
[fetch]
	prune = true
[pull]
	rebase = true
[push]
	default = simple
[rebase]
	autostash = true
	autoSquash = true
[rerere]
	enabled = true
[pager]
	branch = false
	df = false
	ds = false
	last = false
	stashed = false
	tag = false
	who = false
[git-p4]
	attemptRCSCleanup = true
[alias]
	br = branch
	ci = commit
	cl = clone -o github
	co = checkout
	cp = cherry-pick
	df = diff --name-status
	ds = diff --stat -M -w
	ff = merge --ff-only
	ga = log --graph --oneline --decorate --exclude=refs/stash --exclude='refs/notes/*' --exclude='refs/original/*' --all
	gr = log --graph --oneline --decorate
	ld = log --pretty=format:"%C(yellow)%h\\ %Cgreen%ad%Creset\\ %s\\ %Cblue[%aN]" --date=short
	lf = log --pretty=format:"%C(yellow)%h\\ %Cgreen%ad%Creset\\ %s\\ %Cblue[%aN]" --date=relative --name-status
	ls = log --pretty=format:"%C(yellow)%h\\ %Cgreen%ad%Creset\\ %s\\ %Cblue[%aN]" --date=relative
	ol = log --oneline --decorate
	ph = push -u github HEAD
	rb = rebase
	ri = rebase -i
	rv = revert
	sh = show HEAD
	st = status
	alias = "!f() { git config --get-regexp alias | cut -c 7- | sed \"s/ /$(echo 2B | xxd -r -p)/\" | column -t -s $(echo 2B | xxd -r -p); }; f"
	authors = !sh -c 'git log --format="%aN" | sort -k 2 -u'
	changed = diff ORIG_HEAD..
	deleted = log --diff-filter=D --summary
	diff-branch = "!f() { git diff $(git merge-base --fork-point master $1)..$1; }; f"
	edits = diff --color-words
	fix = commit -a --amend --no-edit
	fork = merge-base --fork-point master
	hide = update-index --assume-unchanged
	info = config --list
	last = log --grep='^fixup!' --invert-grep --pretty=tformat:%h -n 1
	last-log = log --pretty=format:%s%n%n%b -n 1
	latest-tag = describe --abbrev=0
	nuke = !sh -c 'git reset --hard HEAD~$1' -
	on = rev-parse --abbrev-ref HEAD
	oops = "!f() { git commit --fixup=$(git last); }; f"
	push-name = !sh -c 'git remote get-url --push $(git push-remote) | cut -d / -f 2 | cut -d . -f 1'
	push-remote = !sh -c 'git config branch.$(git rev-parse --abbrev-ref HEAD).remote'
	release = !sh -c 'git diff $(git describe | cut -d - -f 1)..'
	showtag = !sh -c 'git rev-parse $1 | xargs git cat-file -p' -
	staged = diff --cached
	start = commit --allow-empty -m 'Initial commit to repo'
	stashed = stash list
	tags = tag -n1 -l
	trash = !git reset HEAD . && git checkout -- . && echo 'Undid all changes'
	tree = !sh -c 'git ls-files | tree --fromfile .'
	type = cat-file -t
	unstage = reset HEAD .
	which = branch --contains
	wip = ci -m wip
	who = shortlog -sn --no-merges
	whoami = !git config --get user.name && git config --get user.email

[include]
	path = ~/.gitconfig.user
