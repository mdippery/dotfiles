[user]
	name = Michael Dippery
	email = michael@monkey-robot.com
[core]
	excludesfile = ~/.config/git/ignore
[apply]
	whitespace = nowarn
[color]
	branch = auto
	diff = auto
	interactive = auto
	status = auto
[diff]
	renames = copies
[diff "json"]
	textconv = jq '.'
[instaweb]
	httpd = webrick
[interactive]
	singlekey = true
[fetch]
	prune = true
[pull]
	rebase = true
[push]
	default = simple
[rebase]
	autostash = true
[rerere]
	enabled = true
[pager]
	incoming = false
	outgoing = false
	who = false
[alias]
	br = branch
	ci = commit
	co = checkout
	cp = cherry-pick
	ds = !git --no-pager diff --stat -M -w
	ga = log --graph --oneline --decorate --all
	gr = log --graph --oneline --decorate
	ld = log --pretty=format:"%C(yellow)%h\\ %Cgreen%ad%Creset\\ %s\\ %Cblue[%an]" --date=short
	lf = log --pretty=format:"%C(yellow)%h\\ %Cgreen%ad%Creset\\ %s\\ %Cblue[%an]" --date=relative --name-status
	ls = log --pretty=format:"%C(yellow)%h\\ %Cgreen%ad%Creset\\ %s\\ %Cblue[%an]" --date=relative
	ol = log --oneline --decorate
	rb = rebase
	ri = rebase -i
	rp = "!f() { for remote in $(git remote); do git remote prune $remote; done; }; f"
	rv = revert
	ru = remote update
	sb = status -sb
	sh = show HEAD
	st = status
	blc = blame-color
	alias = "!f() { git config --get-regexp alias | cut -c 7- | sed \"s/ /$(echo 2B | xxd -r -p)/\" | column -t -s $(echo 2B | xxd -r -p); }; f"
	authors = !sh -c 'git log --format="%aN" | sort -k 2 -u'
	changed = diff ORIG_HEAD..
	deleted = log --diff-filter=D --summary
	edits = diff --color-words
	fix = commit -a --amend
	hide = update-index --assume-unchanged
	incoming = log --pretty=format:"%C(yellow)%h\\ %Cgreen%ad%Creset\\ %s\\ %Cblue[%an]%n" --date=relative ORIG_HEAD..
	info = config --list
	nuke = !sh -c 'git reset --hard HEAD~$1' -
	outgoing = log --pretty=format:"%C(yellow)%h\\ %Cgreen%ad%Creset\\ %s\\ %Cblue[%an]%n" --date=relative @{u}..
	showtag = !sh -c 'git rev-parse $1 | xargs git cat-file -p' -
	staged = diff --cached
	stashed = !git --no-pager stash list
	tags = tag -n1 -l
	trash = !git reset HEAD . && git checkout -- . && echo 'Undid all changes'
	type = cat-file -t
	undo = reset HEAD .
	who = shortlog -sn --no-merges
	whoami = !git config --get user.name && git config --get user.email

[include]
	path = ~/.gitconfig.user
